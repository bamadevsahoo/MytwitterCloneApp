@model TwitterClone.Person
@{
    if (ViewContext.IsChildAction != true && !Request.IsAjaxRequest())
    {
        Layout = "~/Views/Shared/_DefaultLayoutPage.cshtml";

    }
    else
    {
        Layout = null;
    }
}

@{
    ViewBag.Title = "SignUp";
}
<script type="text/javascript" language="javascript">
    var urlContent = "@Url.Content("~/")";
    window.onload = function window_OnLoad() {
        nobackhfive();
    }
</script>
<style>
    .contentSignup {      
        height: auto;       
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin-left: 45px;  
    }

</style>

<h2 style="color:turquoise">Join My Twitter Clone</h2>
<hr />
@using (Html.BeginForm("SignUp", "SignIn",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="contentSignup">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.user_id, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.user_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label" })
                @Html.PasswordFor(model => model.password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Signup" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


<div style="margin-left: 45px">
    @Html.ActionLink("Back to login", "login")
</div>

@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != string.Empty)
{
    <h5 class="alert-danger">@ViewBag.SuccessMessage</h5>
}

@if (ViewBag.SignupSuccess == "True")
{
    <h5 class="alert-success">Signup successful, click Back to login </h5>
}
@if (ViewBag.errorMessage != null && ViewBag.errorMessage != string.Empty)
{
    <h5 class="alert-danger">@ViewBag.errorMessage</h5>
}
